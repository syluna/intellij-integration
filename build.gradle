plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.4.14'
}

group 'com.jmonkeystore'
version '1.0.4.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()

    // test-data
    maven { url 'https://dl.bintray.com/stephengold/org.jmonkeyengine' } // for jme3-testdata
}

configurations {
    corelibs
}

project.ext {
    jmeVer = "3.3.0-alpha5"
}

dependencies {

    compile "org.jmonkeyengine:jme3-core:$jmeVer"
    compile "org.jmonkeyengine:jme3-desktop:$jmeVer"
    compile "org.jmonkeyengine:jme3-lwjgl:$jmeVer"
    compile "org.jmonkeyengine:jme3-plugins:$jmeVer"
    compile "org.jmonkeyengine:jme3-blender:$jmeVer"
    compile "org.jmonkeyengine:jme3-jogg:$jmeVer"
    compile "org.jmonkeyengine:jme3-terrain:$jmeVer"

    compile "org.jmonkeyengine:jme3-testdata:3.3.0-alpha2"

    implementation "org.reflections:reflections:0.9.11"
}


// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    version 'IC-2019.3'
    plugins 'gradle', 'java'
}
patchPluginXml {
    changeNotes """

    <h3>1.0.3</h3>
    <ul>
        <li>Add Nodes (Right-Click on a node in scene explorer).</li>
        <li>Drag models into the scene explorer from the project tab.</li>
        <li>Delete things (right-click in scene explorer).</li>
        <li>Save Changes in Scene Explorer</li>
        <li>Add a SkyBox (Right Click in Scene Explorer)</li>
        <li>Generate LightProbes</li>
    </ul>

    <h3>1.0.2</h3>
    <ul>
        <li>View j3m materials.</li>
        <li>Add and remove lights from a scene.</li>
        <li>Added checks and dialogs for read/write permissions.</li>
        <li>Clean up classpath when finished with added jars.</li>
    </ul>

    <h3>1.0.1</h3>
    <ul>
        <li>Added a scene explorer</li>
        <li>Added basic editing tools</li>
        <li>Added option to view normals in editor debug menu</li>
        <li>Added the ability to save changes</li>
    </ul>

    <h3>1.0</h3>
    <p>Initial release</p>
    """
}

jar {
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}